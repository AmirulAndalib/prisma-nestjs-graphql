datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nestjsgraphql {
  provider                              = "node -r ts-node/register/transpile-only src/index.ts"
  fields_Validator_from                 = "class-validator"
  fields_Validator_input                = true
  requireSingleFieldsInWhereUniqueInput = true
  emitSingle                            = true
  emitCompiled                          = true
  purgeOutput                           = true
  output                                = "../@generated"
}

model Parcel {
  id              String    @id @default(cuid())
  customer        Customer? @relation(fields: [customer_number], references: [number])
  customer_number String?
}

model Customer {
  number              String        @id
  destinations        Destination[]
  collectors          Profile[]     @relation(name: "collector")
  favoriteDelivery    Delivery      @relation(fields: [id_favoriteDelivery], references: [id])
  id_favoriteDelivery String        @unique
  profile             Profile       @relation(fields: [id_profile], references: [id])
  id_profile          String        @unique
  Parcel              Parcel[]
}

model Destination {
  id                            String    @id @default(cuid())
  customer_destination_customer Customer? @relation(fields: [customer_number], references: [number])
  customer_number               String?
  delivery_destination_delivery Delivery?
}

model Profile {
  id                         String    @id @default(cuid())
  customer                   Customer?
  collector_profile_customer Customer? @relation(name: "collector", fields: [customer_numbner], references: [number])
  customer_numbner           String?
}

model Delivery {
  id                                  String       @id @default(cuid())
  destination                         Destination? @relation(fields: [id_destination], references: [id])
  id_destination                      String?      @unique
  customer_favouriteDelivery_customer Customer?
}
